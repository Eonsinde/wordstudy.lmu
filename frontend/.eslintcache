[{"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\index.js":"1","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\App.js":"2","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\layout\\Footer.js":"4","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\routes\\RouteControl.js":"5","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\layout\\Nav.js":"6","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\layout\\Home.js":"7","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\layout\\Library.js":"8","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\content\\Book.js":"9","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\forms\\Contact.js":"10","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\forms\\Register.js":"11","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\routes\\PrivateRoute.js":"12","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\actions\\book.js":"13","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\actions\\types.js":"14","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\store.js":"15","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\reducers\\index.js":"16","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\reducers\\auth.js":"17","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\reducers\\error.js":"18","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\reducers\\message.js":"19","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\reducers\\book.js":"20","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\actions\\message.js":"21","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\content\\Preloader.js":"22","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\actions\\category.js":"23","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\reducers\\category.js":"24","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\reducers\\exco.js":"25","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\actions\\exco.js":"26","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\actions\\auth.js":"27","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\actions\\error.js":"28","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\layout\\Alert.js":"29","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\admin\\ManageGenre.js":"30","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\admin\\ManageBooks.js":"31","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\admin\\layout\\AdMain.js":"32","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\admin\\layout\\Dashboard.js":"33","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\admin\\layout\\Login.js":"34","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\admin\\ManageExcos.js":"35","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\admin\\modals\\CreateEvent.js":"36","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\admin\\modals\\CreateExco.js":"37","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\admin\\modals\\CreateGenre.js":"38","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\admin\\modals\\CreateBook.js":"39","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\admin\\modals\\RegisterUser.js":"40","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\admin\\ManageEvent.js":"41","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\reducers\\event.js":"42","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\actions\\event.js":"43","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\admin\\layout\\Profile.js":"44","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\admin\\modals\\ManageProfile.js":"45","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\reducers\\user.js":"46","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\actions\\user.js":"47","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\admin\\ManageUsers.js":"48","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\admin\\ManageMembers.js":"49"},{"size":504,"mtime":1611952106828,"results":"50","hashOfConfig":"51"},{"size":2212,"mtime":1612475378252,"results":"52","hashOfConfig":"51"},{"size":362,"mtime":1606174160826,"results":"53","hashOfConfig":"51"},{"size":1298,"mtime":1611870432164,"results":"54","hashOfConfig":"51"},{"size":598,"mtime":1607625236935,"results":"55","hashOfConfig":"51"},{"size":3540,"mtime":1611787703284,"results":"56","hashOfConfig":"51"},{"size":14386,"mtime":1612047781469,"results":"57","hashOfConfig":"51"},{"size":4628,"mtime":1612056918290,"results":"58","hashOfConfig":"51"},{"size":3527,"mtime":1612056421265,"results":"59","hashOfConfig":"51"},{"size":6923,"mtime":1611868863528,"results":"60","hashOfConfig":"51"},{"size":4999,"mtime":1611870005701,"results":"61","hashOfConfig":"51"},{"size":612,"mtime":1612038768695,"results":"62","hashOfConfig":"51"},{"size":3503,"mtime":1612064669821,"results":"63","hashOfConfig":"51"},{"size":1930,"mtime":1612379048799,"results":"64","hashOfConfig":"51"},{"size":401,"mtime":1611698491289,"results":"65","hashOfConfig":"51"},{"size":460,"mtime":1612378990520,"results":"66","hashOfConfig":"51"},{"size":1707,"mtime":1612378353101,"results":"67","hashOfConfig":"51"},{"size":409,"mtime":1611971385513,"results":"68","hashOfConfig":"51"},{"size":317,"mtime":1611971929109,"results":"69","hashOfConfig":"51"},{"size":1814,"mtime":1612063797167,"results":"70","hashOfConfig":"51"},{"size":161,"mtime":1611971795940,"results":"71","hashOfConfig":"51"},{"size":2668,"mtime":1612047359633,"results":"72","hashOfConfig":"51"},{"size":2078,"mtime":1612107438033,"results":"73","hashOfConfig":"51"},{"size":977,"mtime":1612050104747,"results":"74","hashOfConfig":"51"},{"size":1174,"mtime":1612059290410,"results":"75","hashOfConfig":"51"},{"size":2762,"mtime":1612059167400,"results":"76","hashOfConfig":"51"},{"size":3771,"mtime":1612460562736,"results":"77","hashOfConfig":"51"},{"size":182,"mtime":1611698796151,"results":"78","hashOfConfig":"51"},{"size":2708,"mtime":1612395671423,"results":"79","hashOfConfig":"51"},{"size":4635,"mtime":1612057881068,"results":"80","hashOfConfig":"51"},{"size":9759,"mtime":1612085919765,"results":"81","hashOfConfig":"51"},{"size":10612,"mtime":1612474938659,"results":"82","hashOfConfig":"51"},{"size":4228,"mtime":1612390755919,"results":"83","hashOfConfig":"51"},{"size":3103,"mtime":1612038944610,"results":"84","hashOfConfig":"51"},{"size":7779,"mtime":1612061116831,"results":"85","hashOfConfig":"51"},{"size":3731,"mtime":1612102869277,"results":"86","hashOfConfig":"51"},{"size":3069,"mtime":1612102890619,"results":"87","hashOfConfig":"51"},{"size":2242,"mtime":1612102906238,"results":"88","hashOfConfig":"51"},{"size":4217,"mtime":1612102825651,"results":"89","hashOfConfig":"51"},{"size":6279,"mtime":1612383305095,"results":"90","hashOfConfig":"51"},{"size":9199,"mtime":1612500317836,"results":"91","hashOfConfig":"51"},{"size":937,"mtime":1612057773525,"results":"92","hashOfConfig":"51"},{"size":2071,"mtime":1612055199464,"results":"93","hashOfConfig":"51"},{"size":1755,"mtime":1612464935966,"results":"94","hashOfConfig":"51"},{"size":6607,"mtime":1612474867761,"results":"95","hashOfConfig":"51"},{"size":1124,"mtime":1612464104243,"results":"96","hashOfConfig":"51"},{"size":2714,"mtime":1612464497006,"results":"97","hashOfConfig":"51"},{"size":11707,"mtime":1612474543091,"results":"98","hashOfConfig":"51"},{"size":3126,"mtime":1612517391036,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"1w375in",{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"102"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"102"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"102"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"102"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"102"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"102"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\index.js",[],["206","207"],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\App.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\layout\\Footer.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\routes\\RouteControl.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\layout\\Nav.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\layout\\Home.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\layout\\Library.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\content\\Book.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\forms\\Contact.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\forms\\Register.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\routes\\PrivateRoute.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\actions\\book.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\actions\\types.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\store.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\reducers\\index.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\reducers\\auth.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\reducers\\error.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\reducers\\message.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\reducers\\book.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\actions\\message.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\content\\Preloader.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\actions\\category.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\reducers\\category.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\reducers\\exco.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\actions\\exco.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\actions\\auth.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\actions\\error.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\layout\\Alert.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\admin\\ManageGenre.js",["208"],"import {useState, useEffect} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport {getCategories, deleteGenre, updateGenre } from '../actions/category';\r\n\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\nimport Swal from 'sweetalert2';\r\nimport Preloader from '../content/Preloader';\r\n\r\n\r\nconst ManageGenre = ({genres, getCategories, deleteGenre, updateGenre}) => {\r\n    let [isLoading, setIsLoading] = useState(true);\r\n    let [name, setName] = useState('');\r\n    let [show, setShow] = useState(false);\r\n\r\n    let [currentGenre, setCurrentGenre] = useState('');\r\n\r\n    useEffect(() => {\r\n        document.title = 'Word Study | Manage Genre';\r\n        getCategories();\r\n        setIsLoading(false);\r\n    }, []);\r\n\r\n    const setActiveEvent = (id) => {\r\n        setShow(true);\r\n        setCurrentGenre(id);\r\n    }\r\n\r\n    const handleUpdate = () => {\r\n        if (name === ''){\r\n            Toast.fire({\r\n                icon: 'error',\r\n                title: 'Fill in the blank field'\r\n            })\r\n        }else{\r\n            let genreData = {};\r\n\r\n            if (name){\r\n                genreData['name'] = name;\r\n            }\r\n\r\n            updateGenre(currentGenre, genreData);\r\n\r\n            setTimeout(() => {\r\n                setName('');\r\n            }, 2000);\r\n        }\r\n    }\r\n\r\n    const handleDelete = (id) => {\r\n        swalWithBootstrapButtons.fire({\r\n            title: `Are you sure?`,\r\n            text: \"You won't be able to revert this!\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Yes',\r\n            cancelButtonText: 'No, cancel!',\r\n            reverseButtons: false\r\n        })\r\n        .then((result) => {\r\n            if (result.isConfirmed) {\r\n                deleteGenre(id);\r\n            }\r\n        })\r\n    }\r\n\r\n    return ( \r\n        <section className='manage-books'>\r\n            {\r\n                isLoading\r\n                ?\r\n                <Preloader />\r\n                :\r\n                genres?.map(genre => \r\n                    <div key={genre.id} className=\"my-admin-card shadow-sm\">\r\n                        <div className='text-center mb-2'>\r\n                            <small >Genre</small>\r\n                        </div>\r\n                        <h3 className=\"card-text text-center text-dark text-capitalize\">\r\n                            {genre.name}\r\n                        </h3>\r\n                        <div className='my-admin-card-overlay mt-4'>\r\n                            <button className='' onClick={() => setActiveEvent(genre.id)}>Edit<i className='fas fa-pen ml-2'></i></button>\r\n                            <button className='bg-danger' onClick={() => handleDelete(genre.id)}>Delete<i className='fas fa-trash ml-2'></i></button>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n            <Modal\r\n                show={show}\r\n                onHide={() => setShow(false)}\r\n                dialogClassName=\"modal-90w\"\r\n                aria-labelledby=\"example-custom-modal-styling-title\"\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id=\"example-custom-modal-styling-title\">\r\n                        Update Genre id:- {currentGenre}\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <form className='creategenre-form' onSubmit={e => e.preventDefault()}>\r\n                        <div>\r\n                            <label>Name</label>\r\n                            <input className='early-input' onChange={e => setName(e.target.value)} type=\"text\" value={name} />\r\n                        </div>\r\n                        <div>\r\n                            <input onClick={handleUpdate} className='creategenre-submit-btn' type=\"submit\" />\r\n                        </div>\r\n                    </form>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </section>\r\n    );\r\n}\r\n\r\nconst Toast = Swal.mixin({\r\n    toast: true,\r\n    position: 'top-end',\r\n    showConfirmButton: false,\r\n    timer: 3000,\r\n    timerProgressBar: false,\r\n    onOpen: (toast) => {\r\n      toast.addEventListener('mouseenter', Swal.stopTimer)\r\n      toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n    }\r\n});\r\n\r\nconst swalWithBootstrapButtons = Swal.mixin({\r\n    customClass: {\r\n      confirmButton: 'btn btn-primary',\r\n      cancelButton: 'btn btn-danger'\r\n    },\r\n});\r\n \r\n\r\nconst mapStateToProps = state => ({\r\n    genres: state.category.categories\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, {getCategories, deleteGenre, updateGenre})(ManageGenre);","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\admin\\ManageBooks.js",["209"],"import {useState, useEffect} from 'react';\r\n\r\nimport {connect} from 'react-redux';\r\nimport {getBooks, deleteBook, updateBook} from '../actions/book';\r\nimport {getCategories as getGenres} from '../actions/category';\r\n\r\nimport Preloader from '../content/Preloader';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\n\r\nimport './styles/books.css';\r\n\r\n\r\nconst ManageBooks = ({books, genres, booksLoading, getBooks, deleteBook, updateBook, getGenres}) => {\r\n    let [isLoading, setIsLoading] = useState(true);\r\n    let [show, setShow] = useState(false);\r\n\r\n    let [title, setTitle] = useState('');\r\n    let [author, setAuthor] = useState('');\r\n    let [file, setFile] = useState('');\r\n    let [fileName, setFileName] = useState('');\r\n    let [selectedGenre, setGenre] = useState('');\r\n\r\n    let [currentBook, setCurrentBook] = useState('');\r\n    \r\n    useEffect(() => {\r\n        document.title = 'Word Study | Book Management';\r\n        getBooks();\r\n        getGenres();\r\n        setIsLoading(booksLoading);\r\n    }, []);\r\n\r\n    const handleFileChange = (e) => {\r\n        setFile(e.target.files[0]);\r\n        setFileName(e.target.files[0].name);\r\n    }\r\n\r\n    const setActiveBook = (id) => {\r\n        setShow(true);\r\n        setCurrentBook(id);\r\n    }\r\n\r\n    const handleUpdate = () => {\r\n        if (title === '' && author === '' && fileName === '' && selectedGenre === ''){\r\n            Toast.fire({\r\n                icon: 'error',\r\n                title: 'Fill in a field'\r\n            })\r\n        }else{\r\n            let bookFormData = new FormData();\r\n\r\n            if (title){\r\n                bookFormData.append('title', title);\r\n            }\r\n            if (author){\r\n                bookFormData.append('author', author);\r\n            }\r\n            if (file){\r\n                bookFormData.append('file', file, fileName);\r\n            }\r\n            if (selectedGenre){\r\n                bookFormData.append('genre', JSON.stringify({\r\n                    name: selectedGenre\r\n                })); \r\n            }\r\n\r\n            updateBook(currentBook, bookFormData);\r\n\r\n            setTimeout(() => {\r\n                setTitle('');\r\n                setAuthor('');\r\n                setFile('');\r\n                setFileName('');\r\n                setGenre('');  \r\n            }, 2000);\r\n        }\r\n    } \r\n\r\n    const handleDelete = (id) => {\r\n        swalWithBootstrapButtons.fire({\r\n                title: `Are you sure?`,\r\n                text: \"You won't be able to revert this!\",\r\n                icon: 'warning',\r\n                showCancelButton: true,\r\n                confirmButtonText: 'Yes',\r\n                cancelButtonText: 'No, cancel!',\r\n                reverseButtons: false\r\n            })\r\n            .then((result) => {\r\n                if (result.isConfirmed) {\r\n                    deleteBook(id);\r\n                }\r\n            })\r\n    } \r\n\r\n    return ( \r\n        <section className='manage-grid'>\r\n            {\r\n                isLoading\r\n                ?\r\n                <Preloader size='md' />\r\n                :\r\n                books.map((book, index) => (\r\n                    <div key={book.id} className=\"my-admin-card shadow-sm\">\r\n                        <div className=\"d-flex justify-content-center align-items-center mb-3\">\r\n                            <small className='text-dark'><i className='fas fa-book-open fa-3x'></i></small>\r\n                        </div>\r\n                        <p className=\"card-text text-center text-dark text-capitalize\">\r\n                            Title: {\r\n                                book.title.length < 20 \r\n                                ? \r\n                                book.title \r\n                                : \r\n                                <OverlayTrigger\r\n                                    key={index}\r\n                                    placement={'bottom'}\r\n                                    overlay={\r\n                                        <Tooltip id={`tooltip-${'bottom'}`}>\r\n                                            {book.title}\r\n                                        </Tooltip>\r\n                                    }\r\n                                >\r\n                                    <span>{book.title.slice(0,20)}...</span>\r\n                                </OverlayTrigger>\r\n                                }\r\n                            <br />\r\n                            Author: {\r\n                                book.author.length < 20 \r\n                                ?\r\n                                book.author \r\n                                : \r\n                                <OverlayTrigger\r\n                                    key={book.id}\r\n                                    placement={'bottom'}\r\n                                    overlay={\r\n                                        <Tooltip id={`tooltip-${'bottom'}`}>\r\n                                            {book.author}\r\n                                        </Tooltip>\r\n                                    }\r\n                                >\r\n                                    <span>{book.author.slice(0,20)}...</span>\r\n                                </OverlayTrigger>\r\n                            }\r\n                            <br/>\r\n                            Genre: {book.genre.name < 20 ? book.genre.name : book.genre.name.slice(0, 20)}\r\n                            <br />\r\n                            File: {\r\n                                book.file.length < 30\r\n                                ?\r\n                                book.file\r\n                                :\r\n                                <OverlayTrigger\r\n                                    key={book.id}\r\n                                    placement={'bottom'}\r\n                                    overlay={\r\n                                        <Tooltip id={`tooltip-${'bottom'}`}>\r\n                                            {book.file}\r\n                                        </Tooltip>\r\n                                    }\r\n                                >\r\n                                    <span>{book.file.slice(0,25)}...</span>\r\n                                </OverlayTrigger>\r\n                            }\r\n                        </p>\r\n                        <div className='my-admin-card-overlay'>\r\n                            <button className='' onClick={() => setActiveBook(book.id)}>Edit<i className='fas fa-pen ml-2'></i></button>\r\n                            <button className='bg-danger' onClick={() => handleDelete(book.id)}>Delete<i className='fas fa-trash ml-2'></i></button>\r\n                        </div>\r\n                    </div>\r\n                ))\r\n            }\r\n            <Modal\r\n                show={show}\r\n                onHide={() => setShow(false)}\r\n                dialogClassName=\"modal-90w\"\r\n                scrollable={true}\r\n                aria-labelledby=\"example-custom-modal-styling-title\"\r\n            >\r\n                <Modal.Header closeButton>\r\n                <Modal.Title id=\"example-custom-modal-styling-title\">\r\n                    Update Book id:- {currentBook}\r\n                </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <form className='createbook-form' onSubmit={e => e.preventDefault()}>\r\n                        <div>\r\n                            <label>Title</label>\r\n                            <input className='early-input' onChange={e => setTitle(e.target.value)} type=\"text\" value={title} />\r\n                        </div>\r\n                        <div>\r\n                            <label>Author</label>\r\n                            <input className='early-input' onChange={e => setAuthor(e.target.value)} type=\"text\" value={author} />\r\n                        </div>\r\n                        <div>\r\n                            <label>File</label>\r\n                            <input className='early-input' onChange={handleFileChange} type=\"file\" />\r\n                        </div>\r\n                        <div>\r\n                            <label>Genre</label>\r\n                            <select onChange={e => setGenre(e.target.value)} >\r\n                                <option value=\"\" key=\"0\">All</option>\r\n                                {\r\n                                    genres.map(genre => \r\n                                        <option value={genre.name} key={genre.id}>{genre.name}</option>    \r\n                                    )\r\n                                }\r\n                            </select>\r\n                        </div>\r\n                        <div>\r\n                            <input onClick={handleUpdate} className='createbook-submit-btn' type=\"submit\" />\r\n                        </div>\r\n                    </form>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </section>\r\n    );\r\n}\r\n\r\nconst Toast = Swal.mixin({\r\n    toast: true,\r\n    position: 'top-end',\r\n    showConfirmButton: false,\r\n    timer: 3000,\r\n    timerProgressBar: false,\r\n    onOpen: (toast) => {\r\n      toast.addEventListener('mouseenter', Swal.stopTimer)\r\n      toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n    }\r\n});\r\n\r\nconst swalWithBootstrapButtons = Swal.mixin({\r\n    customClass: {\r\n      confirmButton: 'btn btn-primary',\r\n      cancelButton: 'btn btn-danger'\r\n    },\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n    books: state.book.books,\r\n    booksLoading: state.book.isLoading,\r\n    genres: state.category.categories\r\n})\r\n\r\nexport default connect(mapStateToProps, {getBooks, updateBook, deleteBook, getGenres})(ManageBooks);","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\admin\\layout\\AdMain.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\admin\\layout\\Dashboard.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\admin\\layout\\Login.js",["210"],"import {useState, useEffect} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { login } from '../../actions/auth';\r\n\r\nimport {loadUser} from '../../actions/auth';\r\n\r\nimport Swal from 'sweetalert2';\r\n\r\nimport '../styles/login.css';\r\n\r\n\r\n\r\nconst Login = ({login, loadUser, isAuthenticated}) => {\r\n    let [username, setUsername] = useState('');\r\n    let [password, setPassword] = useState('');\r\n    let [submitted, setSubmitted] = useState(false);\r\n    let [toggleReveal, setReveal] = useState(false);\r\n\r\n    useEffect(() => {\r\n        document.title = 'Word Study | Admin Login';\r\n        loadUser();\r\n    }, [submitted]);\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if (username === '' || password === ''){\r\n            Toast.fire({\r\n                icon: 'error',\r\n                title: `Please fill in all fields`\r\n            });\r\n        }else{\r\n            login({username, password});\r\n            setSubmitted(true);\r\n        }\r\n    }\r\n\r\n    if (isAuthenticated)\r\n        return <Redirect to='/admin-dashboard' />\r\n    return (\r\n        <section className='login-wrapper'>\r\n            <form className='login-form' onSubmit={handleSubmit}>\r\n                <div className=\"login-form-header text-center\">\r\n                    <h1 className='login-form-header-text text-dark'>Word Study</h1>\r\n                    <small className='login-form-header-sub-text text-muted'>Admin Portal</small>\r\n                </div>\r\n\r\n                <div className=\"form-sect\">\r\n                    <label htmlFor=\"\"><i className=\"fas fa-user\"></i></label>\r\n                    <input type=\"text\" onChange={e => setUsername(e.target.value)} value={username} placeholder=\"Username\" />\r\n                </div>\r\n                <div className=\"form-sect\">\r\n                        <label htmlFor=\"\"><i className=\"fas fa-key\"></i></label>\r\n                    <input type={`${toggleReveal ? 'text': 'password'}`} value={password} onChange={e => setPassword(e.target.value)} placeholder=\"Password\" />\r\n                    <div className='pswd-reveal' onClick={()=>setReveal(!toggleReveal)}><i className={`fas ${toggleReveal ? 'fa-eye-slash' : 'fa-eye'}`}></i></div>\r\n                </div>\r\n                <div className='form-sect'>\r\n                    <input type=\"submit\" value=\"Login\" />\r\n                </div>\r\n            </form>\r\n            <footer className=\"login-form-footer text-white-50 mt-3\">\r\n                <small>Copyright &copy; { new Date().getFullYear() }; Word Study</small>\r\n            </footer>\r\n        </section>  \r\n    );  \r\n}\r\n\r\nconst Toast = Swal.mixin({\r\n    toast: true,\r\n    position: 'top',\r\n    showConfirmButton: false,\r\n    timer: 3000,\r\n    timerProgressBar: false,\r\n    onOpen: (toast) => {\r\n      toast.addEventListener('mouseenter', Swal.stopTimer)\r\n      toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n    }\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n})\r\n \r\nexport default connect(mapStateToProps, {login, loadUser})(Login);","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\admin\\ManageExcos.js",["211"],"import {useState, useEffect} from 'react';\r\n\r\nimport {connect} from 'react-redux';\r\nimport {getExcos, deleteExco, updateExco} from '../actions/exco';\r\n\r\nimport Preloader from '../content/Preloader';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\n\r\n\r\n\r\nconst ManageExcos = ({excos, getExcos, deleteExco, updateExco, excosLoading}) => {\r\n    let [isLoading, setIsLoading] = useState(true);\r\n    let [show, setShow] = useState(false);\r\n\r\n    let [name, setName] = useState('');\r\n    let [post, setPost] = useState('');\r\n    let [image, setImage] = useState('');\r\n    let [imageName, setImageName] = useState('');\r\n\r\n    let [currentExco, setCurrentExco] = useState('');\r\n\r\n    useEffect(() => {\r\n        document.title = 'Word Study | Exco Management';\r\n        getExcos();\r\n        setIsLoading(excosLoading);\r\n    }, []);\r\n\r\n    const setActiveExco = (id) => {\r\n        setShow(true);\r\n        setCurrentExco(id);\r\n    }\r\n\r\n    const handleFileChange = (e) => {\r\n        setImage(e.target.files[0]);\r\n        setImageName(e.target.files[0].name);\r\n    }\r\n\r\n    const handleUpdate = () => {\r\n        if (name === '' && post === '' && imageName === ''){\r\n            Toast.fire({\r\n                icon: 'error',\r\n                title: 'Fill in a field'\r\n            })\r\n        }else{\r\n            let excoFormData = new FormData();\r\n\r\n            if (name){\r\n                excoFormData.append('name', name);\r\n            }\r\n            if (post){\r\n                excoFormData.append('post', post);\r\n            }\r\n            if (image){\r\n                excoFormData.append('photo', image, imageName);\r\n            }\r\n\r\n            updateExco(currentExco, excoFormData);\r\n\r\n            setTimeout(() => {\r\n                setName('');\r\n                setPost('');\r\n                setImage('');\r\n                setImageName('');\r\n            }, 2000);\r\n        }\r\n    } \r\n\r\n    const handleDelete = (id) => {\r\n        swalWithBootstrapButtons.fire({\r\n                title: `Are you sure?`,\r\n                text: \"You won't be able to revert this!\",\r\n                icon: 'warning',\r\n                showCancelButton: true,\r\n                confirmButtonText: 'Yes',\r\n                cancelButtonText: 'No, cancel!',\r\n                reverseButtons: false\r\n            })\r\n            .then((result) => {\r\n                if (result.isConfirmed) {\r\n                    deleteExco(id);\r\n                }\r\n            })\r\n    } \r\n\r\n    return ( \r\n        <section className='manage-books'>\r\n            {\r\n                isLoading\r\n                ?\r\n                <Preloader />\r\n                :\r\n                excos.map((exco, index) => (\r\n                    <div key={exco.id} className=\"my-admin-card shadow-sm\">\r\n                        <img className='card-img-top' src={exco.photo} alt={`${exco.name} avatar`} />\r\n                        <div className='card-body'>\r\n                            <p className=\"card-text text-center text-dark text-capitalize\">\r\n                                Name: {\r\n                                    exco.name.length < 20 \r\n                                    ? \r\n                                    exco.name\r\n                                    : \r\n                                    <OverlayTrigger\r\n                                        key={index}\r\n                                        placement={'bottom'}\r\n                                        overlay={\r\n                                            <Tooltip id={`tooltip-${'bottom'}`}>\r\n                                                {exco.name}\r\n                                            </Tooltip>\r\n                                        }\r\n                                    >\r\n                                        <span>{exco.name.slice(0,20)}...</span>\r\n                                    </OverlayTrigger>\r\n                                    }\r\n                                <br />\r\n                                Post: {\r\n                                    exco.post.length < 20 \r\n                                    ?\r\n                                    exco.post \r\n                                    : \r\n                                    <OverlayTrigger\r\n                                        key={exco.id}\r\n                                        placement={'bottom'}\r\n                                        overlay={\r\n                                            <Tooltip id={`tooltip-${'bottom'}`}>\r\n                                                {exco.post}\r\n                                            </Tooltip>\r\n                                        }\r\n                                    >\r\n                                        <span>{exco.post.slice(0,20)}...</span>\r\n                                    </OverlayTrigger>\r\n                                }\r\n                                <br/>\r\n                            </p>\r\n                            <div className='my-admin-card-overlay'>\r\n                                <button className='' onClick={() => setActiveExco(exco.id)}>Edit<i className='fas fa-pen ml-2'></i></button>\r\n                                <button className='bg-danger' onClick={() => handleDelete(exco.id)}>Delete<i className='fas fa-trash ml-2'></i></button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ))\r\n            }\r\n            <Modal\r\n                show={show}\r\n                onHide={() => setShow(false)}\r\n                dialogClassName=\"modal-90w\"\r\n                aria-labelledby=\"example-custom-modal-styling-title\"\r\n            >\r\n                <Modal.Header closeButton>\r\n                <Modal.Title id=\"example-custom-modal-styling-title\">\r\n                    Update Exco id:- {currentExco}\r\n                </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <form className='createbook-form' onSubmit={e => e.preventDefault()}>\r\n                        <div>\r\n                            <label>Name</label>\r\n                            <input className='early-input' onChange={e => setName(e.target.value)} type=\"text\" value={name} />\r\n                        </div>\r\n                        <div>\r\n                            <label>Post</label>\r\n                            <input className='early-input' onChange={e => setPost(e.target.value)} type=\"text\" value={post} />\r\n                        </div>\r\n                        <div>\r\n                            <label>Photo</label>\r\n                            <input className='early-input' onChange={handleFileChange} type=\"file\" />\r\n                        </div>\r\n                        <div>\r\n                            <input onClick={handleUpdate} className='createbook-submit-btn' type=\"submit\" />\r\n                        </div>\r\n                    </form>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </section>\r\n    );\r\n}\r\n\r\nconst Toast = Swal.mixin({\r\n    toast: true,\r\n    position: 'top-end',\r\n    showConfirmButton: false,\r\n    timer: 3000,\r\n    timerProgressBar: false,\r\n    onOpen: (toast) => {\r\n      toast.addEventListener('mouseenter', Swal.stopTimer)\r\n      toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n    }\r\n});\r\n\r\nconst swalWithBootstrapButtons = Swal.mixin({\r\n    customClass: {\r\n      confirmButton: 'btn btn-primary',\r\n      cancelButton: 'btn btn-danger'\r\n    },\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n    excos: state.exco.excos_list,\r\n    excosLoading: state.exco.isLoading\r\n})\r\n\r\nexport default connect(mapStateToProps, {getExcos, updateExco, deleteExco})(ManageExcos);","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\admin\\modals\\CreateEvent.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\admin\\modals\\CreateExco.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\admin\\modals\\CreateGenre.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\admin\\modals\\CreateBook.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\admin\\modals\\RegisterUser.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\admin\\ManageEvent.js",["212"],"import {useState, useEffect} from 'react';\r\n\r\nimport {connect} from 'react-redux';\r\nimport {getEvents, deleteEvent, updateEvent} from '../actions/event';\r\n\r\nimport Preloader from '../content/Preloader';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\r\nimport Tooltip from 'react-bootstrap/Tooltip';\r\n\r\n\r\nconst ManageEvent = ({events, getEvents, updateEvent, deleteEvent}) => {\r\n    let [isLoading, setIsLoading] = useState(true);\r\n    let [show, setShow] = useState(false);\r\n\r\n    let [currentEvent, setCurrentEvent] = useState('');\r\n\r\n    let [title, setTitle] = useState('');\r\n    let [venue, setVenue] = useState('');\r\n    let [theme, setTheme] = useState('');\r\n    let [date, setDate] = useState('');\r\n    let [time, setTime] = useState('');\r\n    \r\n    useEffect(() => {\r\n        document.title = 'Word Study | Event Management';\r\n        getEvents();\r\n        setIsLoading(false);\r\n    }, []);\r\n\r\n    const setActiveEvent = (id) => {\r\n        setShow(true);\r\n        setCurrentEvent(id);\r\n    }\r\n\r\n    const handleUpdate = () => {\r\n        if (title === '' && venue === '' && theme === '' && date === '' && time === ''){\r\n            Toast.fire({\r\n                icon: 'error',\r\n                title: 'Fill in a field'\r\n            })\r\n        }else{\r\n            let eventData = {};\r\n\r\n            if (title){\r\n                eventData['title'] = title;\r\n            }\r\n            if (venue){\r\n                eventData['venue'] = venue;\r\n            }\r\n            if (theme){\r\n                eventData['theme'] = theme;\r\n            }\r\n            if (date){\r\n                eventData['date'] = date;\r\n            }\r\n            if (time){\r\n                eventData['time'] = time;\r\n            }\r\n\r\n            updateEvent(currentEvent, eventData);\r\n\r\n            setTimeout(() => {\r\n                setTitle('');\r\n                setVenue('');\r\n                setTheme('');\r\n                setDate('');\r\n                setTime('');\r\n            }, 2000);\r\n        }\r\n    } \r\n\r\n    const handleDelete = (id) => {\r\n        swalWithBootstrapButtons.fire({\r\n                title: `Are you sure?`,\r\n                text: \"You won't be able to revert this!\",\r\n                icon: 'warning',\r\n                showCancelButton: true,\r\n                confirmButtonText: 'Yes',\r\n                cancelButtonText: 'No, cancel!',\r\n                reverseButtons: false\r\n            })\r\n            .then((result) => {\r\n                if (result.isConfirmed) {\r\n                    deleteEvent(id);\r\n                }\r\n            })\r\n    } \r\n\r\n    return ( \r\n        <section className='manage-books'>\r\n            {\r\n                isLoading\r\n                ?\r\n                <Preloader />\r\n                :\r\n                events.map((evt, index) => (\r\n                    <div key={evt.id} className=\"my-admin-card shadow-sm\">\r\n                        <div className=\"d-flex justify-content-center align-items-center mb-3\">\r\n                            <small>Event</small>\r\n                        </div>\r\n                        <p className=\"card-text text-center text-dark text-capitalize\">\r\n                            Title: {\r\n                                evt.title.length < 20 \r\n                                ? \r\n                                evt.title \r\n                                : \r\n                                <OverlayTrigger\r\n                                    key={index}\r\n                                    placement={'bottom'}\r\n                                    overlay={\r\n                                        <Tooltip id={`tooltip-${'bottom'}`}>\r\n                                            {evt.title}\r\n                                        </Tooltip>\r\n                                    }\r\n                                >\r\n                                    <span>{evt.title.slice(0,20)}...</span>\r\n                                </OverlayTrigger>\r\n                                }\r\n                            <br />\r\n                            Theme: {\r\n                                evt.theme.length < 20 \r\n                                ? \r\n                                evt.theme \r\n                                : \r\n                                <OverlayTrigger\r\n                                    key={index+1}\r\n                                    placement={'bottom'}\r\n                                    overlay={\r\n                                        <Tooltip id={`tooltip-${'bottom'}`}>\r\n                                            {evt.theme}\r\n                                        </Tooltip>\r\n                                    }\r\n                                >\r\n                                    <span>{evt.theme.slice(0,20)}...</span>\r\n                                </OverlayTrigger>\r\n                                }\r\n                            <br />\r\n                            Venue: {\r\n                                evt.venue.length < 20 \r\n                                ?\r\n                                evt.venue \r\n                                : \r\n                                <OverlayTrigger\r\n                                    key={index+2}\r\n                                    placement={'bottom'}\r\n                                    overlay={\r\n                                        <Tooltip id={`tooltip-${'bottom'}`}>\r\n                                            {evt.venue}\r\n                                        </Tooltip>\r\n                                    }\r\n                                >\r\n                                    <span>{evt.venue.slice(0,20)}...</span>\r\n                                </OverlayTrigger>\r\n                            }\r\n                            <br/>\r\n                            Date: {evt.date}\r\n                            <br/>\r\n                            Time: {evt.time.slice(0,5)}\r\n                        </p>\r\n                        <div className='my-admin-card-overlay'>\r\n                            <button className='' onClick={() => setActiveEvent(evt.id)}>Edit<i className='fas fa-pen ml-2'></i></button>\r\n                            <button className='bg-danger' onClick={() => handleDelete(evt.id)}>Delete<i className='fas fa-trash ml-2'></i></button>\r\n                        </div>\r\n                    </div>\r\n                ))\r\n            }\r\n            <Modal\r\n                show={show}\r\n                onHide={() => setShow(false)}\r\n                dialogClassName=\"modal-90w\"\r\n                scrollable={true}\r\n                aria-labelledby=\"example-custom-modal-styling-title\"\r\n            >\r\n                <Modal.Header closeButton>\r\n                <Modal.Title id=\"example-custom-modal-styling-title\">\r\n                    Update Event id:- {currentEvent}\r\n                </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <form className='createevent-form' onSubmit={e => e.preventDefault()}>\r\n                        <div>\r\n                            <label>Title</label>\r\n                            <input className='early-input' onChange={e => setTitle(e.target.value)} type=\"text\" value={title} />\r\n                        </div>\r\n                        <div>\r\n                            <label>Venue</label>\r\n                            <input className='early-input' onChange={e => setVenue(e.target.value)} type=\"text\" value={venue} />\r\n                        </div>\r\n                        <div>\r\n                            <label>Theme</label>\r\n                            <input className='early-input' onChange={e => setTheme(e.target.value)} type=\"text\" value={theme} />\r\n                        </div>\r\n                        <div>\r\n                            <label>Date</label>\r\n                            <input className='early-input' type=\"date\" onChange={e => setDate(e.target.value)} value={date} />\r\n                        </div>\r\n                        <div>\r\n                            <label>Time</label>\r\n                            <input className='early-input' type=\"time\" onChange={e => setTime(e.target.value)} value={time} />\r\n                        </div>\r\n                        <div>\r\n                            <input onClick={handleUpdate} className='createevent-submit-btn' type=\"submit\" />\r\n                        </div>\r\n                    </form>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </section>\r\n    );\r\n}\r\n\r\nconst swalWithBootstrapButtons = Swal.mixin({\r\n    customClass: {\r\n      confirmButton: 'btn btn-primary',\r\n      cancelButton: 'btn btn-danger'\r\n    },\r\n});\r\n\r\nconst Toast = Swal.mixin({\r\n    toast: true,\r\n    position: 'top-end',\r\n    showConfirmButton: false,\r\n    timer: 3000,\r\n    timerProgressBar: false,\r\n    onOpen: (toast) => {\r\n      toast.addEventListener('mouseenter', Swal.stopTimer)\r\n      toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n    }\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n    events: state.event.events,\r\n})\r\n\r\nexport default connect(mapStateToProps, {getEvents, deleteEvent, updateEvent})(ManageEvent);","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\reducers\\event.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\actions\\event.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\admin\\layout\\Profile.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\admin\\modals\\ManageProfile.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\reducers\\user.js",[],["213","214"],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\actions\\user.js",[],"C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\admin\\ManageUsers.js",["215"],"import {useEffect, useState} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {connect, useSelector} from 'react-redux';\r\n\r\nimport {deleteUser, getUsers, updateUser} from '../actions/user';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Swal from 'sweetalert2';\r\n\r\nimport Preloader from '../content/Preloader';\r\n\r\n\r\nconst ManageUsers = ({users, isLoading, getUsers, deleteUser, updateUser}) => {\r\n    let [username, setUsername] = useState('');\r\n    let [email, setEmail] = useState('');\r\n    let [firstName, setFirstName] = useState('');\r\n    let [lastName, setLastName] = useState('');\r\n    let [password, setPassword] = useState('');\r\n    let [confPassword, setConfPassword] = useState('');\r\n    let [image, setImage] = useState('');\r\n    let [imageName, setImageName] = useState('');\r\n    let [phone_no, setPhoneNo] = useState('');\r\n\r\n    let [usersLoading, setUsersLoading] = useState(true);\r\n    let [show, setShow] = useState(false);\r\n    let [showUpdate, setShowUpdate] = useState(false);\r\n    let [currentUser, setCUser] = useState({});\r\n\r\n    let authUser = useSelector(state => state.auth.user);\r\n\r\n    useEffect(() => {\r\n        document.title = 'Word Study | Manage All Users';\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        getUsers();\r\n        setUsersLoading(isLoading);\r\n    }, []);\r\n\r\n    const setCurrentUser = (user) => {\r\n        setCUser(user);\r\n        setShow(true);\r\n    }\r\n\r\n    const setCurrentUserForUpdate = (user) => {\r\n        setCUser(user);\r\n        setShowUpdate(true);\r\n    }\r\n\r\n    const handleFileChange = (e) => {\r\n        setImage(e.target.files[0]);\r\n        setImageName(e.target.files[0].name);\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        // using the currently set user, we can safely submitted\r\n        if (username === '' && email === '' && firstName === \"\" && lastName === '' && image === '' && phone_no === '' && password === ''){\r\n            Toast.fire({\r\n                icon: 'error',\r\n                title: 'Please fill in a field'\r\n            })\r\n        }else if(password !== confPassword){\r\n            Toast.fire({\r\n                icon: 'error',\r\n                title: 'Passwords don\\'t match'\r\n            })\r\n        }else{\r\n            let formData = new FormData();\r\n\r\n            if (username)\r\n                formData.append('username', username);\r\n            if (email)\r\n                formData.append('email', email);\r\n            if (firstName)\r\n                formData.append('first_name', firstName);\r\n            if (lastName)\r\n                formData.append('last_name', lastName);\r\n            if (password)\r\n                formData.append('password', password);\r\n            if (imageName)\r\n                formData.append('actual-img', image, imageName);\r\n            if (phone_no)\r\n                formData.append('phone_no', phone_no);\r\n            \r\n            updateUser(currentUser.id, formData);\r\n\r\n            setTimeout(() => {\r\n                setUsername('');\r\n                setEmail('');\r\n                setFirstName('');\r\n                setLastName('');\r\n                setPassword('');\r\n                setImage('');\r\n                setImageName('');\r\n                setPhoneNo('');\r\n            }, 2000);\r\n        }\r\n    }\r\n\r\n    const handleDelete = (id) => {\r\n        swalWithBootstrapButtons.fire({\r\n            title: `Are you sure?`,\r\n            text: \"You won't be able to revert this!\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Yes',\r\n            cancelButtonText: 'No, cancel!',\r\n            reverseButtons: false\r\n        })\r\n        .then((result) => {\r\n            if (result.isConfirmed) {\r\n                deleteUser(id);\r\n            }\r\n        })\r\n    }\r\n\r\n    const labelStyles = {\r\n        fontSize: '1.2rem'\r\n    }, fieldStyles = {\r\n        color: '#999',\r\n        fontSize: '1.2rem'\r\n    }, btnStyles = {\r\n        fontSize: '1rem',\r\n        padding: '8px 10px',\r\n        outline: 'none',\r\n        border: 'none'\r\n    }\r\n\r\n    return (\r\n        <section className='manage-books'>\r\n            {\r\n                usersLoading\r\n                ?\r\n                <Preloader />\r\n                :\r\n                users?.map(user => \r\n                    user.id !== authUser.id \r\n                    ?\r\n                    <div className='card' key={user.id}>\r\n                        <img src={user.profile?.image} alt={`${user.username} avatar`} />\r\n                        <div className='card-body text-center'>\r\n                            <div>\r\n                                <Link to='#' className='text-dark' style={{textDecoration: 'none'}} onClick={() => setCurrentUser(user)}>{user.username}</Link>\r\n                            </div>\r\n                            <div className='btn-group mt-3'>\r\n                                <button style={btnStyles} onClick={() => setCurrentUserForUpdate(user)} className='btn-primary'>Update <i className='fas fa-pen ml-2'></i></button>\r\n                                <button style={btnStyles} onClick={() => handleDelete(user.id)} className='btn-danger'>Delete <i className='ml-2 fas fa-trash-alt'></i></button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    :\r\n                    <></>\r\n                )\r\n            }\r\n\r\n            <Modal\r\n                show={show}\r\n                onHide={() => setShow(false)}\r\n                scrollable={true}\r\n                dialogClassName=\"modal-90w\"\r\n                aria-labelledby=\"example-custom-modal-styling-title\"\r\n            >\r\n                <Modal.Header closeButton>\r\n                <Modal.Title id=\"example-custom-modal-styling-title\" className='text-capitalize'>\r\n                    {currentUser.username} Details\r\n                </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                <div className='row profile-warp text-center text-uppercase'>\r\n                    <div className='col-md-12'>\r\n                        <label style={labelStyles}>First Name</label>\r\n                        <p style={fieldStyles}>{currentUser.first_name}</p>\r\n                    </div>\r\n                    <div className='col-md-12'>\r\n                        <label style={labelStyles}>Last Name</label>\r\n                        <p style={fieldStyles}>{currentUser.last_name}</p>\r\n                    </div>\r\n                    <div className='col-md-12'>\r\n                        <label style={labelStyles}>Username</label>\r\n                        <p style={fieldStyles}>{currentUser.username}</p>\r\n                    </div>\r\n                    <div className='col-md-12'>\r\n                        <label style={labelStyles}>Email</label>\r\n                        <p style={fieldStyles}>{currentUser.email}</p>\r\n                    </div>\r\n                    <div className='col-md-12'>\r\n                        <label style={labelStyles}>Phone Number</label>\r\n                        <p style={fieldStyles}>{currentUser?.profile?.phone_no}</p>\r\n                    </div>\r\n                    <div className='col-md-12'>\r\n                        <label style={labelStyles}>Super User</label>\r\n                        <p style={fieldStyles}>{currentUser.is_superuser ? 'True' : 'False'}</p>\r\n                    </div>\r\n                </div>\r\n                </Modal.Body>\r\n            </Modal>\r\n\r\n            <Modal\r\n                size='lg'\r\n                show={showUpdate}\r\n                onHide={() => setShowUpdate(false)}\r\n                scrollable={true}\r\n                dialogClassName=\"modal-100w\"\r\n                aria-labelledby=\"example-custom-modal-styling-title\"\r\n            >\r\n                <Modal.Header closeButton>\r\n                <Modal.Title id=\"example-custom-modal-styling-title\">\r\n                    Update for {currentUser.username}\r\n                </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <form className='registeruser-form' onSubmit={e => e.preventDefault()}>\r\n                        <div className='row'>\r\n                            <div className='col-md-6'>\r\n                                <label>First Name</label>\r\n                                <input className='early-input' onChange={e => setFirstName(e.target.value)} type=\"text\" value={firstName} />\r\n                            </div>\r\n                            <div className='col-md-6'>\r\n                                <label>Last Name</label>\r\n                                <input className='early-input' onChange={e => setLastName(e.target.value)} type=\"text\" value={lastName} />\r\n                            </div>\r\n                        </div>\r\n                        <div className='row'>\r\n                            <div className='col-md-6'>\r\n                                <label>Username</label>\r\n                                <input className='early-input' onChange={e => setUsername(e.target.value)} type=\"text\" value={username} />\r\n                            </div>\r\n                            <div className='col-md-6'>\r\n                                <label>Email</label>\r\n                                <input className='early-input' onChange={e => setEmail(e.target.value)} type=\"text\" value={email} />\r\n                            </div>\r\n                        </div>\r\n                        <div className='row'>\r\n                            <div className='col-md-6'>\r\n                                <label>Password</label>\r\n                                <input className='early-input' onChange={e => setPassword(e.target.value)} type=\"password\" value={password} />\r\n                            </div>\r\n                            <div className='col-md-6'>\r\n                                <label>Confirm Password</label>\r\n                                <input className='early-input' onChange={e => setConfPassword(e.target.value)} type=\"password\" value={confPassword} />\r\n                            </div>\r\n                        </div>\r\n                        <div className='row'>\r\n                            <div className='col-md-6'>\r\n                                <label>Image</label>\r\n                                <input className='early-input' style={{overflow:'hidden'}} onChange={handleFileChange} type=\"file\" />\r\n                            </div>\r\n                            <div className='col-md-6'>\r\n                                <label>Phone Number</label>\r\n                                <input className='early-input' value={phone_no} onChange={e => setPhoneNo(e.target.value)} type=\"text\" />\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <input onClick={() => handleSubmit()} className='registeruser-submit-btn' type=\"submit\" />\r\n                        </div>\r\n                    </form>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </section>\r\n    );\r\n}\r\n\r\nconst Toast = Swal.mixin({\r\n    toast: true,\r\n    position: 'top-end',\r\n    showConfirmButton: false,\r\n    timer: 3000,\r\n    timerProgressBar: false,\r\n    onOpen: (toast) => {\r\n      toast.addEventListener('mouseenter', Swal.stopTimer)\r\n      toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n    }\r\n});\r\n\r\nconst swalWithBootstrapButtons = Swal.mixin({\r\n    customClass: {\r\n      confirmButton: 'btn btn-primary',\r\n      cancelButton: 'btn btn-danger'\r\n    },\r\n});\r\n\r\nconst mapStateToProps = state => ({\r\n    users: state.user.users,\r\n    isLoading: state.user.isLoading\r\n});\r\n \r\nexport default connect(mapStateToProps, {getUsers, deleteUser, updateUser})(ManageUsers);","C:\\Users\\Enoch Sinde\\Desktop\\Project\\websites\\backend\\serviceunit\\frontend\\src\\admin\\ManageMembers.js",["216","217","218"],{"ruleId":"219","replacedBy":"220"},{"ruleId":"221","replacedBy":"222"},{"ruleId":"223","severity":1,"message":"224","line":23,"column":8,"nodeType":"225","endLine":23,"endColumn":10,"suggestions":"226"},{"ruleId":"223","severity":1,"message":"227","line":34,"column":8,"nodeType":"225","endLine":34,"endColumn":10,"suggestions":"228"},{"ruleId":"223","severity":1,"message":"229","line":23,"column":8,"nodeType":"225","endLine":23,"endColumn":19,"suggestions":"230"},{"ruleId":"223","severity":1,"message":"231","line":30,"column":8,"nodeType":"225","endLine":30,"endColumn":10,"suggestions":"232"},{"ruleId":"223","severity":1,"message":"233","line":30,"column":8,"nodeType":"225","endLine":30,"endColumn":10,"suggestions":"234"},{"ruleId":"219","replacedBy":"235"},{"ruleId":"221","replacedBy":"236"},{"ruleId":"223","severity":1,"message":"237","line":37,"column":8,"nodeType":"225","endLine":37,"endColumn":10,"suggestions":"238"},{"ruleId":"239","severity":1,"message":"240","line":13,"column":10,"nodeType":"241","messageId":"242","endLine":13,"endColumn":19},{"ruleId":"239","severity":1,"message":"243","line":14,"column":10,"nodeType":"241","messageId":"242","endLine":14,"endColumn":18},{"ruleId":"239","severity":1,"message":"244","line":21,"column":15,"nodeType":"241","messageId":"242","endLine":21,"endColumn":27},"no-native-reassign",["245"],"no-negated-in-lhs",["246"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCategories'. Either include it or remove the dependency array. If 'getCategories' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["247"],"React Hook useEffect has missing dependencies: 'booksLoading', 'getBooks', and 'getGenres'. Either include them or remove the dependency array. If 'getBooks' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["248"],"React Hook useEffect has a missing dependency: 'loadUser'. Either include it or remove the dependency array. If 'loadUser' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["249"],"React Hook useEffect has missing dependencies: 'excosLoading' and 'getExcos'. Either include them or remove the dependency array. If 'getExcos' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["250"],"React Hook useEffect has a missing dependency: 'getEvents'. Either include it or remove the dependency array. If 'getEvents' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["251"],["245"],["246"],"React Hook useEffect has missing dependencies: 'getUsers' and 'isLoading'. Either include them or remove the dependency array. If 'getUsers' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["252"],"no-unused-vars","'isLoading' is assigned a value but never used.","Identifier","unusedVar","'_members' is assigned a value but never used.","'fetchMembers' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"253","fix":"254"},{"desc":"255","fix":"256"},{"desc":"257","fix":"258"},{"desc":"259","fix":"260"},{"desc":"261","fix":"262"},{"desc":"263","fix":"264"},"Update the dependencies array to be: [getCategories]",{"range":"265","text":"266"},"Update the dependencies array to be: [booksLoading, getBooks, getGenres]",{"range":"267","text":"268"},"Update the dependencies array to be: [loadUser, submitted]",{"range":"269","text":"270"},"Update the dependencies array to be: [excosLoading, getExcos]",{"range":"271","text":"272"},"Update the dependencies array to be: [getEvents]",{"range":"273","text":"274"},"Update the dependencies array to be: [getUsers, isLoading]",{"range":"275","text":"276"},[713,715],"[getCategories]",[1151,1153],"[booksLoading, getBooks, getGenres]",[665,676],"[loadUser, submitted]",[958,960],"[excosLoading, getExcos]",[987,989],"[getEvents]",[1313,1315],"[getUsers, isLoading]"]